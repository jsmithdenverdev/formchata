AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Response Microservice
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        TABLE_NAME: form-response
Parameters:
  AuthorizerArn:
    Type: String
    Description: "Arn for the Formchata Authorizer Lambda"
Resources:
  ResponseApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: FormchataAuthorizer
        Authorizers:
          FormchataAuthorizer:
            FunctionArn: !Ref AuthorizerArn
  CreateFormResponseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-response
      CodeUri: .
      Handler: src/handlers/create.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        Default:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref ResponseApi
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: form-response
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/handlers/create.ts
  ReadFormResponseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: read-response
      CodeUri: .
      Handler: src/handlers/read.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        Default:
          Type: Api
          Properties:
            Path: /{id}
            Method: get
            RestApiId: !Ref ResponseApi
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: form-response
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/handlers/read.ts
  DeleteFormResponseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: delete-response
      CodeUri: .
      Handler: src/handlers/delete.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        Default:
          Type: Api
          Properties:
            Path: /{id}
            Method: delete
            RestApiId: !Ref ResponseApi
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: form-response
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/handlers/delete.ts
  FormTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: form-response
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  ResponseApiURL:
    Description: API endpoint URL for Prod environment
    Value: !Sub 'https://${ResponseApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
